plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'jacoco'
}

group = 'com.bancamia'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql:42.2.23'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// Dependencias de JUnit y Mockito para pruebas unitarias
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:5.3.1'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
	// Dependencias para la validación de datos
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// Dependencias para Swagger OpenAPI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	//implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	testImplementation 'com.github.stefanbirkner:system-lambda:1.2.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
jacoco {
	toolVersion = "0.8.8"
}

jacocoTestReport {
	dependsOn test // Siempre ejecuta las pruebas antes de generar el reporte

	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}

tasks.jacocoTestReport {
	finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.1 // Mínimo 80% de cobertura
			}
		}
	}
}
